{{ ansible_managed | comment }}

# Set shell $PATH
for dir in {{ shell_paths | join(' ') }}
do
  if [[ -d $dir ]]
  then
    path=($dir $path)
  fi
done &>/dev/null

typeset -gU path

# Set shell $MANPATH
for dir in {{ shell_man_paths | join(' ') }}
do
  if [[ -d $dir ]]
  then
    manpath=($dir $path)
  fi
done &>/dev/null

unset dir

typeset -gU manpath

# Add zsh-completions to $FPATH
if [[ -d {{ shell_zsh_completions_dir }} ]]
then
  fpath=({{ shell_zsh_completions_dir }} $fpath)
fi

#
# oh-my-zsh
#

if [[ -r {{ shell_omz_script }} ]]
then
  # Path to your oh-my-zsh installation.
  export ZSH="{{ shell_omz_dir }}"

  # Set name of the theme to load --- if set to "random", it will
  # load a random theme each time oh-my-zsh is loaded, in which case,
  # to know which specific one was loaded, run: echo $RANDOM_THEME
  # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
  ZSH_THEME="{{ shell_omz_theme }}"

  # Set list of themes to pick from when loading at random
  # Setting this variable when ZSH_THEME=random will cause zsh to load
  # a theme from this variable instead of looking in $ZSH/themes/
  # If set to an empty array, this variable will have no effect.
  {{ ((shell_omz_random_themes | length) > 0) | ternary('', '# ') }}ZSH_THEME_RANDOM_CANDIDATES=({{ shell_omz_random_themes | join(' ') }})

  # Uncomment the following line to use case-sensitive completion.
  {{ shell_omz_case_sensitive | ternary('', '# ') }}CASE_SENSITIVE="true"

  # Uncomment the following line to use hyphen-insensitive completion.
  # Case-sensitive completion must be off. _ and - will be interchangeable.
  {{ shell_omz_hyphen_sensitive | ternary('', '# ') }}HYPHEN_INSENSITIVE="true"

  # Uncomment one of the following lines to change the auto-update behavior
  zstyle ':omz:update' mode {{ shell_omz_update_mode }}

  # Uncomment the following line to change how often to auto-update (in days).
  zstyle ':omz:update' frequency {{ shell_omz_update_frequency }}

  # Uncomment the following line if pasting URLs and other text is messed up.
  {{ shell_omz_disable_magic_functions | ternary('', '# ') }}DISABLE_MAGIC_FUNCTIONS="true"

  # Uncomment the following line to disable colors in ls.
  {{ shell_omz_disable_ls_colors | ternary('', '# ') }}DISABLE_LS_COLORS="true"

  # Uncomment the following line to disable auto-setting terminal title.
  {{ shell_omz_disable_auto_title | ternary('', '# ') }}DISABLE_AUTO_TITLE="true"

  # Uncomment the following line to enable command auto-correction.
  {{ shell_omz_enable_correction | ternary('', '# ') }}ENABLE_CORRECTION="true"

  # Uncomment the following line to display red dots whilst waiting for completion.
  # You can also set it to another string to have that shown instead of the default red dots.
  # e.g. COMPLETION_WAITING_DOTS="%F{yellow}waiting...%f"
  # Caution: this setting can cause issues with multiline prompts in zsh < 5.7.1 (see #5765)
  {{ shell_omz_completion_waiting_dots | ternary('', '# ') }}COMPLETION_WAITING_DOTS="true"

  # Uncomment the following line if you want to disable marking untracked files
  # under VCS as dirty. This makes repository status check for large repositories
  # much, much faster.
  {{ shell_omz_disable_untracked_files_dirty | ternary('', '# ') }}DISABLE_UNTRACKED_FILES_DIRTY="true"

  # Uncomment the following line if you want to change the command execution time
  # stamp shown in the history command output.
  # You can set one of the optional three formats:
  # "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
  # or set a custom format using the strftime function format specifications,
  # see 'man strftime' for details.
  {{ (shell_omz_hist_stamps != "") | ternary('', '# ') }}HIST_STAMPS="{{ shell_omz_hist_stamps }}"

  # Would you like to use another custom folder than $ZSH/custom?
  ZSH_CUSTOM="{{ shell_omz_custom_dir }}"

  # Which plugins would you like to load?
  # Standard plugins can be found in $ZSH/plugins/
  # Custom plugins may be added to $ZSH_CUSTOM/plugins/
  # Example format: plugins=(rails git textmate ruby lighthouse)
  # Add wisely, as too many plugins slow down shell startup.
  plugins=({{ shell_omz_plugins | join(' ') }})

  # oh-my-zsh plugin settings: colorize
  {{ (shell_omz_colorize_style != "") | ternary('', '# ') }}ZSH_COLORIZE_STYLE="{{ shell_omz_colorize_style }}"
  {{ (shell_omz_colorize_tool != "") | ternary('', '# ') }}ZSH_COLORIZE_TOOL="{{ shell_omz_colorize_tool }}"

  # Load oh-my-zsh
  source "{{ shell_omz_script }}"
else
  # Run compinit if oh-my-zsh is unavailable
  autoload -Uz compinit
  compinit
fi

#
# User configuration
#

# Init dircolors
if command -v dircolors &>/dev/null
then
  if [[ -r {{ shell_dircolors }} ]]
  then
    eval "$(dircolors -b "{{ shell_dircolors }}")"
  else
    eval "$(dircolors -b)"
  fi
fi

# Load env files
for file in "{{ shell_env }}" "{{ shell_env_local }}"
do
  if [[ -r $file ]]
  then
    source "$file"
  fi
done

unset file

# Aliases
{% for shell_alias in shell_aliases %}
alias {{ shell_alias.alias }}='{{ shell_alias.command }}'
{% endfor %}

# Load fzf
if [[ $- == *i* ]]
then
  if [[ -r {{ shell_fzf_completions }} ]]
  then
    source "{{ shell_fzf_completions }}"
  fi
fi

if [[ -r {{ shell_fzf_bindings }} ]]
then
  source "{{ shell_fzf_bindings }}"
fi

# Load zsh-autosuggestions
if [[ -r {{ shell_zsh_auto_suggestions }} ]]
then
  source "{{ shell_zsh_auto_suggestions }}"
fi

# starship
if command -v starship &>/dev/null
then
  eval "$(starship init zsh)"
fi
